name: CI Checks
 
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - v*
jobs:
  test:
    needs:
      - format-check
      - lint
    name: Test Application
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.22
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Run Test
      run: make test
    - name: Coverage Check
      run: make coverage
    - name: Coverage Report
      run: make report
    - name: Copy Files
      run: |
           mkdir  reports
           cp cover.html reports/.
    - name: Archive
      uses: actions/upload-artifact@v4
      with:
          name: reports
          path: reports
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.22
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Build
      run: make build
    - name: Copy Files
      run: |
           mkdir  artifacts
           cp api artifacts/.
    - name: Archive
      uses: actions/upload-artifact@v4
      with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
          name: api
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: true
        prerelease: true
    - name: Upload Release Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: api
        asset_name: api
        asset_content_type: application/octet-stream
  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.22
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Run Format Check
      run: make check-format
  vet:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.22
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Vet
      run: go vet ./...
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Lint
      uses: golangci/golangci-lint-action@v2 
  # smoke-test:
  #   name: Smoke Test Application
  #   needs: 
  #     - test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: ^1.22
  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@v4
  #   - name: Install Godog
  #     run: go install github.com/cucumber/godog/cmd/godog@latest # <1>
  #   - name: Run Smoke Tests
  #     run: |
  #          go get ./...
  #          godog run --tags=smoke-test